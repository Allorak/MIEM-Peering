// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using patools.Models;

namespace patools.Migrations
{
    [DbContext(typeof(PAToolsContext))]
    [Migration("20211121130340_User.Status renamed to User.Role")]
    partial class UserStatusrenamedtoUserRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("patools.Models.Course", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TeacherID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("patools.Models.CourseUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("UserID");

                    b.ToTable("CourseUsers");
                });

            modelBuilder.Entity("patools.Models.Group", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("patools.Models.GroupUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GroupID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StudentID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Subgroup")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GroupID");

                    b.HasIndex("StudentID");

                    b.ToTable("GroupUsers");
                });

            modelBuilder.Entity("patools.Models.Question", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Criteria")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaskID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TaskID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("patools.Models.Task", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CheckDeadlineDatetime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CheckStartDatetime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompletionDeadlineDatetime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDatetime")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubmissionsToCheck")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("patools.Models.TaskUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("StudentID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaskID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TaskID");

                    b.ToTable("TaskUsers");
                });

            modelBuilder.Entity("patools.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("patools.Models.Variant", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuestionID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("patools.Models.Course", b =>
                {
                    b.HasOne("patools.Models.User", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherID");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("patools.Models.CourseUser", b =>
                {
                    b.HasOne("patools.Models.Course", "Course")
                        .WithMany("CourseUsers")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("patools.Models.User", "User")
                        .WithMany("CourseUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("patools.Models.GroupUser", b =>
                {
                    b.HasOne("patools.Models.Group", "Group")
                        .WithMany("GroupUsers")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("patools.Models.User", "Student")
                        .WithMany("GroupUsers")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("patools.Models.Question", b =>
                {
                    b.HasOne("patools.Models.Task", "Task")
                        .WithMany("Questions")
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("patools.Models.Task", b =>
                {
                    b.HasOne("patools.Models.Course", "Course")
                        .WithMany("Tasks")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("patools.Models.TaskUser", b =>
                {
                    b.HasOne("patools.Models.User", "Student")
                        .WithMany("TaskUsers")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("patools.Models.Task", "Task")
                        .WithMany("TaskUsers")
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("patools.Models.Variant", b =>
                {
                    b.HasOne("patools.Models.Question", "Question")
                        .WithMany("Variants")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("patools.Models.Course", b =>
                {
                    b.Navigation("CourseUsers");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("patools.Models.Group", b =>
                {
                    b.Navigation("GroupUsers");
                });

            modelBuilder.Entity("patools.Models.Question", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("patools.Models.Task", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("TaskUsers");
                });

            modelBuilder.Entity("patools.Models.User", b =>
                {
                    b.Navigation("CourseUsers");

                    b.Navigation("GroupUsers");

                    b.Navigation("TaskUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
